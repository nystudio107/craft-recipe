{# ------------------------ #}
{# Available Variables #}
{# ------------------------ #}
{# Attributes: #}
{# type, name, handle, instructions, attribute, default, feed, feedData #}
{# ------------------------ #}
{# Fields: #}
{# name, handle, instructions, feed, feedData, field, fieldClass #}
{# ------------------------ #}

{# Special case when inside another complex field (Matrix) #}
{% if parentPath is defined %}
    {% set prefixPath = parentPath %}
{% else %}
    {% set prefixPath = [handle] %}
{% endif %}

{% set classes = ['complex-field'] %}

<tr class="complex-field complex-field-header">
    <td class="col-field" colspan="3">
        <div class="field">
            <div class="heading">
                <label class="">{{ name }}</label>
            </div>

            <div class="additional-mapping-fields">
                {% namespace 'fieldMapping[' ~ prefixPath | join('][') ~ ']' %}
                    <input type="text" name="field" value="{{ className(field) }}">
                {% endnamespace %}
            </div>
        </div>
    </td>
</tr>

{% set subFields = [
    {
        label: 'Name',
        handle: 'name',
    },
    {
        label: 'Description',
        handle: 'description',
    },
    {
        label: 'Skill',
        handle: 'skill',
    },
    {
        label: 'Serves',
        handle: 'serves',
    },
    {
        label: 'Image',
        handle: 'image',
        type: 'assets-create',
    },
    {
        label: 'Ingredients',
        handle: 'ingredients',
        subFields: [
            {
                label: 'Quantity',
                handle: 'quantity',
            },
            {
                label: 'Units',
                handle: 'units',
            },
            {
                label: 'Ingredient',
                handle: 'ingredient',
            },
        ],
    },
    {
        label: 'Directions',
        handle: 'directions',
        subFields: [
            {
                label: 'Direction',
                handle: 'direction',
            },
        ],
    },
    {
        label: 'Prep Time',
        handle: 'prepTime',
    },
    {
        label: 'Cook Time',
        handle: 'cookTime',
    },
    {
        label: 'Total Time',
        handle: 'totalTime',
    },
    {
        label: 'Ratings',
        handle: 'ratings',
        subFields: [
            {
                label: 'Rating',
                handle: 'rating',
            },
            {
                label: 'Review',
                handle: 'review',
            },
            {
                label: 'Author',
                handle: 'author',
            },
        ],
    },
    {
        label: 'Serving Size',
        handle: 'servingSize',
    },
    {
        label: 'Calories',
        handle: 'calories',
    },
    {
        label: 'Carbohydrate Content',
        handle: 'carbohydrateContent',
    },
    {
        label: 'Cholesterol Content',
        handle: 'cholesterolContent',
    },
    {
        label: 'Fat Content',
        handle: 'fatContent',
    },
    {
        label: 'Fiber Content',
        handle: 'fiberContent',
    },
    {
        label: 'Protein Content',
        handle: 'proteinContent',
    },
    {
        label: 'Saturated Fat Content',
        handle: 'saturatedFatContent',
    },
    {
        label: 'Sodium Content',
        handle: 'sodiumContent',
    },
    {
        label: 'Sugar Content',
        handle: 'sugarContent',
    },
    {
        label: 'Trans Fat Content',
        handle: 'transFatContent',
    },
    {
        label: 'Unsaturated Fat Content',
        handle: 'unsaturatedFatContent',
    },
] %}


{% for subField in subFields %}
    {% if subField.subFields is defined %}
        {% for subSubField in subField.subFields %}
            {% set nameLabel = subField.label ~ ' ' ~ subSubField.label %}
            {% set instructionsHandle = handle ~ '[' ~ subField.handle ~ ']' ~ '[' ~ subSubField.handle ~ ']' %}

            {% set path = prefixPath | merge ([ 'fields', subField.handle, subSubField.handle ]) %}

            {% set default = subField.default ?? {
                type: 'text',
            } %}

            {% embed 'feed-me/_includes/fields/_base' %}{% endembed %}
        {% endfor %}
    {% else %}
        {% set nameLabel = subField.label %}
        {% set instructionsHandle = handle ~ '[' ~ subField.handle ~ ']' %}

        {% set pathFields = subField.handle ? [ 'fields', subField.handle ] : [ 'fields', subField.handle, subField.handle ] %}
        {% set path = prefixPath | merge (pathFields) %}

        {% set default = subField.default ?? {
            type: 'text',
        } %}

        {% embed 'feed-me/_includes/fields/_base' %}{% endembed %}
    {% endif %}
{% endfor %}
